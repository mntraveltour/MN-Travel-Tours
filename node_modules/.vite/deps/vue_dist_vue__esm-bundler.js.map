{
  "version": 3,
  "sources": ["../../vue/dist/vue.esm-bundler.js"],
  "sourcesContent": ["import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\n    {\n        initCustomFormatter();\n    }\n}\n\n// This entry is the \"full-build\" that includes both the runtime\nif ((process.env.NODE_ENV !== 'production')) {\n    initDev();\n}\nconst compileCache = Object.create(null);\nfunction compileToFunction(template, options) {\n    if (!isString(template)) {\n        if (template.nodeType) {\n            template = template.innerHTML;\n        }\n        else {\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\n            return NOOP;\n        }\n    }\n    const key = template;\n    const cached = compileCache[key];\n    if (cached) {\n        return cached;\n    }\n    if (template[0] === '#') {\n        const el = document.querySelector(template);\n        if ((process.env.NODE_ENV !== 'production') && !el) {\n            warn(`Template element not found or is empty: ${template}`);\n        }\n        // __UNSAFE__\n        // Reason: potential execution of JS expressions in in-DOM template.\n        // The user must make sure the in-DOM template is trusted. If it's rendered\n        // by the server, the template should not contain any user data.\n        template = el ? el.innerHTML : ``;\n    }\n    const opts = extend({\n        hoistStatic: true,\n        onError: (process.env.NODE_ENV !== 'production') ? onError : undefined,\n        onWarn: (process.env.NODE_ENV !== 'production') ? e => onError(e, true) : NOOP\n    }, options);\n    if (!opts.isCustomElement && typeof customElements !== 'undefined') {\n        opts.isCustomElement = tag => !!customElements.get(tag);\n    }\n    const { code } = compile(template, opts);\n    function onError(err, asWarning = false) {\n        const message = asWarning\n            ? err.message\n            : `Template compilation error: ${err.message}`;\n        const codeFrame = err.loc &&\n            generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\n        warn(codeFrame ? `${message}\\n${codeFrame}` : message);\n    }\n    // The wildcard import results in a huge object with every export\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\n    // In the global build we know `Vue` is available globally so we can avoid\n    // the wildcard object.\n    const render = (new Function('Vue', code)(runtimeDom));\n    render._rc = true;\n    return (compileCache[key] = render);\n}\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,SAAS,UAAU;AACf;AACI,wBAAoB;AAAA,EACxB;AACJ;AAGA,IAAK,MAAwC;AACzC,UAAQ;AACZ;AACA,IAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,SAAS,kBAAkB,UAAU,SAAS;AAC1C,MAAI,CAAC,SAAS,QAAQ,GAAG;AACrB,QAAI,SAAS,UAAU;AACnB,iBAAW,SAAS;AAAA,IACxB,OACK;AACD,MAA2C,KAAK,6BAA6B,QAAQ;AACrF,aAAO;AAAA,IACX;AAAA,EACJ;AACA,QAAM,MAAM;AACZ,QAAM,SAAS,aAAa,GAAG;AAC/B,MAAI,QAAQ;AACR,WAAO;AAAA,EACX;AACA,MAAI,SAAS,CAAC,MAAM,KAAK;AACrB,UAAM,KAAK,SAAS,cAAc,QAAQ;AAC1C,QAA+C,CAAC,IAAI;AAChD,WAAK,2CAA2C,UAAU;AAAA,IAC9D;AAKA,eAAW,KAAK,GAAG,YAAY;AAAA,EACnC;AACA,QAAM,OAAO,OAAO;AAAA,IAChB,aAAa;AAAA,IACb,SAAU,OAAyC,UAAU;AAAA,IAC7D,QAAS,OAAyC,OAAK,QAAQ,GAAG,IAAI,IAAI;AAAA,EAC9E,GAAG,OAAO;AACV,MAAI,CAAC,KAAK,mBAAmB,OAAO,mBAAmB,aAAa;AAChE,SAAK,kBAAkB,SAAO,CAAC,CAAC,eAAe,IAAI,GAAG;AAAA,EAC1D;AACA,QAAM,EAAE,KAAK,IAAI,QAAQ,UAAU,IAAI;AACvC,WAAS,QAAQ,KAAK,YAAY,OAAO;AACrC,UAAM,UAAU,YACV,IAAI,UACJ,+BAA+B,IAAI;AACzC,UAAM,YAAY,IAAI,OAClB,kBAAkB,UAAU,IAAI,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI,MAAM;AACxE,SAAK,YAAY,GAAG;AAAA,EAAY,cAAc,OAAO;AAAA,EACzD;AAKA,QAAMA,UAAU,IAAI,SAAS,OAAO,IAAI,EAAE,+BAAU;AACpD,EAAAA,QAAO,MAAM;AACb,SAAQ,aAAa,GAAG,IAAIA;AAChC;AACA,wBAAwB,iBAAiB;",
  "names": ["render"]
}
